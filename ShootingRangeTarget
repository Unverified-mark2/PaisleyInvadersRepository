using System.Collections;
using System.Collections.Generic;
using UnityEngine;


public class ShootingRangeTarget : Destructable
{
    [SerializeField] float rotationSpeed;
    [SerializeField] float repairTime;

    Quaternion initialRotation;
    Quaternion targetRotatation;
    bool requireRotation;

    private void Awake()
    {
        initialRotation = transform.rotation;
    }

    public override void Die()
    {
        base.Die();
        targetRotatation = Quaternion.Euler(transform.right * 90);
        requireRotation = true;
        GameManager.Instance.Timer.Add(() =>
        {
            targetRotatation = initialRotation;
            requireRotation = true;
        }, repairTime);
    }

    private void Update()
    {
        if (!requireRotation)
            return;

        transform.rotation = Quaternion.Lerp(transform.rotation, targetRotatation, rotationSpeed * Time.deltaTime);
        if (transform.rotation == targetRotatation)
            requireRotation = false;
    }
}
