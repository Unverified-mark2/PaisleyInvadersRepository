[RequireComponent(typeof(Collider))]
public class Destructable : MonoBehaviour
{
    [SerializeField] public float hitPoints;

    public event System.Action OnDeath;
    public event System.Action OnDamageReceived;

    float damageTaken;

    //this gets the remaining health of the player and takes away any damage that the player has taken
    public float HitPointsRemaining
    {
       get
        {
           return hitPoints - damageTaken;
           
        }
    }

    //this returns true if the hitpointsremaining variable (Health) has a value greater than 0
    public bool IsAlive
    {
        get
        {
            return HitPointsRemaining > 0;
        }
    }

    //this checks if the isalive boolean is true, if it is not it then checks if the ondeath function is running, and if it is not it will run said function
    public virtual void Die()
    {
        if (OnDeath != null)
            OnDeath();
    }

    //this checks the damage the player has received and returns the value, if the players health is less than zero is triggers the Die function
    public virtual void TakeDamage(float amount)
    {
        damageTaken += amount;

        if (OnDamageReceived != null)
            OnDamageReceived();

        if(HitPointsRemaining <= 0)
        {
            Die();
        }
    }

    //this resets any damage the player has received to zero
    public void Reset()
    {
        {
            damageTaken = 0;
        }
    }
}
