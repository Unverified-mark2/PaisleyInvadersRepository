[RequireComponent(typeof(PathFinder))]
[RequireComponent(typeof(EnemyPlayer))]
public class EnemyPatrol : MonoBehaviour
{
    [SerializeField] WaypointController waypointController;
    [SerializeField] float waitTimeMin;
    [SerializeField] float waitTimeMax;

    PathFinder pathFinder;

    private EnemyPlayer m_EnemyPlayer;
	public EnemyPlayer EnemyPlayer {
		get 
		{
			if (m_EnemyPlayer == null)
				m_EnemyPlayer = GetComponent<EnemyPlayer> ();
			return m_EnemyPlayer;
		}
	}

    void Start()
    {
        waypointController.SetNextWaypoint();

    }

    void Awake()
    {
        pathFinder = GetComponent<PathFinder>();
        pathFinder.OnDestionationReached += Pathfinder_onDestionationReached;
        waypointController.OnWaypointChanged += WaypointController_OnWaypointChanged;
		EnemyPlayer.EnemyHealth.OnDeath += EnemyPlayer_OnDeath;
        EnemyPlayer.OnTargetSelected += EnemyPlayer_OnTargetSelected;
    }

    private void EnemyPlayer_OnTargetSelected(Player obj)
    {
        pathFinder.agent.isStopped = true;
    }

    void EnemyPlayer_OnDeath ()
    {
		pathFinder.agent.isStopped = true;
    }

    private void WaypointController_OnWaypointChanged(Waypoint waypoint)
    {
        pathFinder.SetTarget(waypoint.transform.position);
    }

    private void Pathfinder_onDestionationReached()
    {
        //assume we are patrolling the area
        GameManager.Instance.Timer.Add(waypointController.SetNextWaypoint, UnityEngine.Random.Range(waitTimeMin, waitTimeMax));
    }
}
